#include <bits/stdc++.h>

#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define COMP(x) x.resize(unique(all(x)) - x.begin())
template<typename T>
inline bool maximize(T &res, const T &val) {
    if (res < val) return res = val, 1;
    return 0;
}
template<typename T>
inline bool minimize(T &res, const T &val) {
    if (res > val) return res = val, 1;
    return 0;
}

using namespace std;

#define maxn ((int)(5e5) + 10)
#define LOG (int)(31 - __builtin_clz(maxn))
#define int long long
const int MOD = ((int)(1e9) + 7);
// #define ONLINE_JUDGE

int fact[maxn], ifact[maxn];

int binPow(long long a, int b) {
    long long res = 1;
    while (b) {
        if (b & 1) res = (res * a) % MOD;
        a = (a * a) % MOD;
        b >>= 1;
    }
    return (int)res;
}

inline long long C(int k, int n) {
    if (n < k) return 0;
    return ((fact[n] * ifact[k]) % MOD * ifact[n - k]) % MOD;
}

int n, k, q, L[maxn];

namespace sub1 {
    inline bool checkSub() {
        return n <= 8 && k <= 8 && q <= 8;
    }
    
    int digit[10];
    
    bool check() {
        vector<string> temp;
        string cur = "";
        for (int i = n; i >= 1; i--) {
            cur = (char)(digit[i] + '0') + cur;
            temp.emplace_back(cur);
        }
        sort(all(temp));
        for (int i = 1; i <= n; i++) {
            if (temp[i - 1].size() != L[i]) return 0;
        }
        return 1;
    }
    
    int Ans = 0;
    void backtrack(int pos) {
        if (pos > n) {
            Ans += check();
            if (check()) {
                for (int i = 1; i <= n; i++) cerr << digit[i] << ' ';
                cerr << '\n';
            }
            return;
        }
        for (int i = 1; i <= k; i++) {
            digit[pos] = i;
            backtrack(pos + 1);
        }
    }
    
    void process() {
        backtrack(1);
        cout << Ans << '\n';
        while (q--) {
            int i, j; cin >> i >> j;
            swap(L[i], L[j]);
            Ans = 0;
            backtrack(1);
            cout << Ans << '\n';
        }
    }
}

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    
#ifndef ONLINE_JUDGE
#define FILENAME "INOUT"
    freopen(FILENAME ".INP", "r", stdin);
    freopen(FILENAME ".OUT", "w", stdout);
#endif
    
    cin >> n >> k >> q;
    for (int i = 1; i <= n; i++) cin >> L[i];
    
    sub1::process();
    
    return 0;
}

