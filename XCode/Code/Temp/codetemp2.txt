#include <bits/stdc++.h>

#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define COMP(x) x.resize(unique(all(x)) - x.begin())
template<typename T>
inline bool maximize(T &res, const T &val) {
    if (res < val) return res = val, 1;
    return 0;
}
template<typename T>
inline bool minimize(T &res, const T &val) {
    if (res > val) return res = val, 1;
    return 0;
}

using namespace std;

#define maxn ((int)(5e5) + 10)
#define LOG (int)(31 - __builtin_clz(maxn))
#define int long long
const int MOD = ((int)(1e9) + 7);
// #define ONLINE_JUDGE

int fact[maxn << 1], ifact[maxn << 1];

int binPow(long long a, int b) {
    long long res = 1;
    while (b) {
        if (b & 1) res = (res * a) % MOD;
        a = (a * a) % MOD;
        b >>= 1;
    }
    return (int)res;
}

inline long long C(int k, int n) {
    if (n < k) return 0;
    return ((fact[n] * ifact[k]) % MOD * ifact[n - k]) % MOD;
}

int n, k, q, L[maxn];

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    
#ifndef ONLINE_JUDGE
#define FILENAME "INOUT"
    freopen(FILENAME ".INP", "r", stdin);
    freopen(FILENAME ".OUT", "w", stdout);
#endif
    
    int lim = 1e6;
    fact[0] = 1;
    for (int i = 1; i <= lim; i++) fact[i] = 1ll * fact[i - 1] * i % MOD;
    ifact[lim] = binPow(fact[lim], MOD - 2);
    for (int i = lim - 1; i >= 0; i--) ifact[i] = 1ll * ifact[i + 1] * (i + 1) % MOD;
    
    cin >> n >> k >> q;
    for (int i = 1; i <= n; i++) cin >> L[i];
    
    cout << C(n, n + k - 1);
    
    return 0;
}

